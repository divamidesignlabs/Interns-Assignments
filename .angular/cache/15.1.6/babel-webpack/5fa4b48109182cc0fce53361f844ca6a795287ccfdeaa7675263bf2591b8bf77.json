{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/movie.service\";\nimport * as i2 from \"@angular/common\";\nfunction MoviesComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵelement(1, \"img\", 2);\n    i0.ɵɵelementStart(2, \"div\", 3)(3, \"div\", 4)(4, \"div\", 5);\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"div\");\n    i0.ɵɵelement(7, \"img\", 6);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(8, \"div\", 7)(9, \"div\");\n    i0.ɵɵtext(10);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"div\");\n    i0.ɵɵtext(12);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"div\");\n    i0.ɵɵtext(14);\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const posters_r1 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate(posters_r1.name);\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate1(\" \", posters_r1.genre, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.convertToHoursMinutes(posters_r1.duration), \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.percentage(posters_r1.like_count, posters_r1.dislike_count + posters_r1.like_count), \" \");\n  }\n}\nexport class MoviesComponent {\n  constructor(dataservice) {\n    this.dataservice = dataservice;\n    this.moviePosters = ['assets/movie-imgs/poster 1.png', 'assets/movie-imgs/poster 2.png', 'assets/movie-imgs/poster 3.png', 'assets/movie-imgs/poster 1.png', 'assets/movie-imgs/poster 2.png', 'assets/movie-imgs/poster 3.png', 'assets/movie-imgs/poster 1.png', 'assets/movie-imgs/poster 1.png'];\n    this.movieDetails = [];\n    this.minutes = 0;\n  }\n  ngOnInit() {\n    this.dataservice.getposts().subscribe(res => {\n      this.movieDetails = res;\n      console.log(this.movieDetails);\n    });\n  }\n  convertToHoursMinutes(duration) {\n    let hours = Math.floor(duration / 60);\n    let remainingMinutes = duration % 60;\n    return hours + \" hrs \" + remainingMinutes + \" mins\";\n  }\n  percentage(num, per) {\n    return Math.floor(num / per * 100) + \" % \";\n  }\n}\nMoviesComponent.ɵfac = function MoviesComponent_Factory(t) {\n  return new (t || MoviesComponent)(i0.ɵɵdirectiveInject(i1.MovieService));\n};\nMoviesComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: MoviesComponent,\n  selectors: [[\"app-movies\"]],\n  decls: 2,\n  vars: 1,\n  consts: [[1, \"posters\"], [4, \"ngFor\", \"ngForOf\"], [\"(cl)[src]\", \"moviePosters[i]\", \"alt\", \"Poster\", \"width\", \"290px\", \"height\", \"400px\", 1, \"details-card\"], [1, \"movie-Details\"], [1, \"movieTitle\"], [1, \"detail-card\"], [\"src\", \"assets\\\\movie-imgs\\\\liked.svg\"], [1, \"genre\"]],\n  template: function MoviesComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵtemplate(1, MoviesComponent_div_1_Template, 15, 4, \"div\", 1);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.movieDetails);\n    }\n  },\n  dependencies: [i2.NgForOf],\n  styles: [\".posters[_ngcontent-%COMP%]{\\r\\n    display: flex;\\r\\n     gap:30px; \\r\\n    flex-wrap: wrap;\\r\\n    padding-left:40px;\\r\\n}\\r\\n.movie-Details[_ngcontent-%COMP%]{\\r\\n    background-color: grey;\\r\\n}\\r\\n.movieTitle[_ngcontent-%COMP%]{\\r\\n    display:flex;\\r\\n    justify-content: space-between;\\r\\n    padding: 5px 10px;\\r\\n}\\r\\n.genre[_ngcontent-%COMP%]{\\r\\n    display: flex;\\r\\n    justify-content: space-between;\\r\\n    padding: 0px 5px;\\r\\n}\\r\\n.details-card[_ngcontent-%COMP%]{\\r\\n    cursor: pointer;\\r\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvbW92aWVzL21vdmllcy5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksYUFBYTtLQUNaLFFBQVE7SUFDVCxlQUFlO0lBQ2YsaUJBQWlCO0FBQ3JCO0FBQ0E7SUFDSSxzQkFBc0I7QUFDMUI7QUFDQTtJQUNJLFlBQVk7SUFDWiw4QkFBOEI7SUFDOUIsaUJBQWlCO0FBQ3JCO0FBQ0E7SUFDSSxhQUFhO0lBQ2IsOEJBQThCO0lBQzlCLGdCQUFnQjtBQUNwQjtBQUNBO0lBQ0ksZUFBZTtBQUNuQiIsInNvdXJjZXNDb250ZW50IjpbIi5wb3N0ZXJze1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgICBnYXA6MzBweDsgXHJcbiAgICBmbGV4LXdyYXA6IHdyYXA7XHJcbiAgICBwYWRkaW5nLWxlZnQ6NDBweDtcclxufVxyXG4ubW92aWUtRGV0YWlsc3tcclxuICAgIGJhY2tncm91bmQtY29sb3I6IGdyZXk7XHJcbn1cclxuLm1vdmllVGl0bGV7XHJcbiAgICBkaXNwbGF5OmZsZXg7XHJcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XHJcbiAgICBwYWRkaW5nOiA1cHggMTBweDtcclxufVxyXG4uZ2VucmV7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xyXG4gICAgcGFkZGluZzogMHB4IDVweDtcclxufVxyXG4uZGV0YWlscy1jYXJke1xyXG4gICAgY3Vyc29yOiBwb2ludGVyO1xyXG59Il0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;;;IACEA,2BAAyD;IACvDA,yBAAkG;IAClGA,8BAA2B;IAEEA,YAAkB;IAAAA,iBAAM;IACjDA,2BAAK;IACHA,yBAAyC;IAC3CA,iBAAM;IAERA,8BAAmB;IAEfA,aACF;IAAAA,iBAAM;IACNA,4BAAK;IACHA,aACF;IAAAA,iBAAM;IACNA,4BAAK;IACHA,aAMF;IAAAA,iBAAM;;;;;IAnBmBA,eAAkB;IAAlBA,qCAAkB;IAOzCA,eACF;IADEA,iDACF;IAEEA,eACF;IADEA,kFACF;IAEEA,eAMF;IANEA,2HAMF;;;AChBR,OAAM,MAAOC,eAAe;EAIzBC,YAAoBC,WAAwB;IAAxB,gBAAW,GAAXA,WAAW;IAH/B,iBAAY,GAAC,CAAC,gCAAgC,EAAC,gCAAgC,EAAC,gCAAgC,EAAC,gCAAgC,EAAC,gCAAgC,EAAC,gCAAgC,EAAC,gCAAgC,EAAC,gCAAgC,CAAC;IACtR,iBAAY,GAAO,EAAE;IACrB,YAAO,GAAQ,CAAC;EAC8B;EAC9CC,QAAQ;IAAG,IAAI,CAACD,WAAW,CAACE,QAAQ,EAAE,CAACC,SAAS,CAAEC,GAAG,IAAG;MACpD,IAAI,CAACC,YAAY,GAACD,GAAG;MACvBE,OAAO,CAACC,GAAG,CAAC,IAAI,CAACF,YAAY,CAAC;IAC9B,CAAC,CAAC;EACJ;EACCG,qBAAqB,CAACC,QAAgB;IACtC,IAAIC,KAAK,GAAGC,IAAI,CAACC,KAAK,CAACH,QAAQ,GAAG,EAAE,CAAC;IACrC,IAAII,gBAAgB,GAAGJ,QAAQ,GAAG,EAAE;IAEpC,OAAOC,KAAK,GAAG,OAAO,GAAGG,gBAAgB,GAAG,OAAO;EACrD;EACCC,UAAU,CAACC,GAAO,EAAEC,GAAO;IAG5B,OAAOL,IAAI,CAACC,KAAK,CAAEG,GAAG,GAACC,GAAG,GAAE,GAAG,CAAC,GAAE,KAAK;EACzC;;AApBalB,eAAe;mBAAfA,eAAe;AAAA;AAAfA,eAAe;QAAfA,eAAe;EAAAmB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDR5BxB,8BAAqB;MACnBA,iEA0BM;MACRA,iBAAM;;;MA3BqBA,eAAiB;MAAjBA,0CAAiB","names":["i0","MoviesComponent","constructor","dataservice","ngOnInit","getposts","subscribe","res","movieDetails","console","log","convertToHoursMinutes","duration","hours","Math","floor","remainingMinutes","percentage","num","per","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\Users\\user\\Desktop\\Interns-Assignments\\Booking\\src\\app\\movies\\movies.component.html","C:\\Users\\user\\Desktop\\Interns-Assignments\\Booking\\src\\app\\movies\\movies.component.ts"],"sourcesContent":["<div class=\"posters\">\r\n  <div *ngFor=\"let posters of movieDetails; let i = index\">\r\n    <img class=\"details-card\" (cl)[src]=\"moviePosters[i]\" alt=\"Poster\" width=\"290px\" height=\"400px\" />\r\n    <div class=\"movie-Details\">\r\n      <div class=\"movieTitle\">\r\n        <div class=\"detail-card\">{{ posters.name }}</div>\r\n        <div>\r\n          <img src=\"assets\\movie-imgs\\liked.svg\" />\r\n        </div>\r\n      </div>\r\n      <div class=\"genre\">\r\n        <div>\r\n          {{ posters.genre }}\r\n        </div>\r\n        <div>\r\n          {{ convertToHoursMinutes(posters.duration) }}\r\n        </div>\r\n        <div>\r\n          {{\r\n            percentage(\r\n              posters.like_count,\r\n              posters.dislike_count + posters.like_count\r\n            )\r\n          }}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component } from '@angular/core';\nimport{MovieService} from '../services/movie.service'\n\n@Component({\n  selector: 'app-movies',\n  templateUrl: './movies.component.html',\n  styleUrls: ['./movies.component.css']\n})\nexport class MoviesComponent {\n   moviePosters=['assets/movie-imgs/poster 1.png','assets/movie-imgs/poster 2.png','assets/movie-imgs/poster 3.png','assets/movie-imgs/poster 1.png','assets/movie-imgs/poster 2.png','assets/movie-imgs/poster 3.png','assets/movie-imgs/poster 1.png','assets/movie-imgs/poster 1.png']\n   movieDetails:any[]=[]\n   minutes:number=0;\n   constructor(private dataservice:MovieService){}\n   ngOnInit(){this.dataservice.getposts().subscribe((res)=>{\n       this.movieDetails=res\n     console.log(this.movieDetails)\n     })\n   }\n    convertToHoursMinutes(duration: number) {\n    let hours = Math.floor(duration / 60); \n    let remainingMinutes = duration % 60; \n  \n    return hours + \" hrs \" + remainingMinutes + \" mins\";\n  }\n   percentage(num:any, per:any)\n{\n  \n  return Math.floor((num/per)*100) +\" % \";\n}\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}